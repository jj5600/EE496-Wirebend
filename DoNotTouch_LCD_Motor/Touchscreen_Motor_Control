#define dirPin1 3     //stepper1 direction_pin
#define stepPin1 4    //stepper1 step_pin
#define dirPin2 6    //stepper2 direction_pin
#define stepPin2 7   //stepper2 step_pin

#define stepsPerRevolution 220 //steps per revolution for each motor

String data;   // string variable to store incoming serial data
bool start_flag=false; // bool variable to store the start and pause status

int motor_speed=0;
int motor1_speed=0;
int motor2_speed=0;


int stepperMotorSpeed1=0; //motor 1 delay
int stepperMotorSpeed2=0; //motor 2 delay

float start_angle=0;
float start_angle1=0;
float start_angle2=0; 

float stop_angle=0;
float stop_angle1=0;
float stop_angle2=0;

int cycle_count=0;
int cycle_count1=0;
int cycle_count2=0;

int counter=0;
int counter1=0;
int counter2=0;

String station1_status;
String station2_status;

bool s1=false;
bool s2=false;


void setup()
{
  Serial.begin(9600);
  Serial1.begin(9600);
  pinMode(stepPin1, OUTPUT); //motor 1
  pinMode(dirPin1, OUTPUT); //motor 1
  pinMode(stepPin2, OUTPUT); // motor 2
  pinMode(dirPin2, OUTPUT); // motor 2


}
void loop() 
{ 
serial_data();
if((start_flag==true)&&(station1_status=="ON"))  //if start button is pressed and station1 button is pressed
 {
  stepper_motor1(); // stepper1 motor function call
  Serial.print("Fuck it");
  if(counter1>=cycle_count1)  // if counter1 is greater than entered count cycle then reset it.
  {
    Serial.print("ALFONSO"); 
    motor1_speed=0;
    start_angle1=0;
    stop_angle1=0;
    cycle_count1=0;
    counter1=0;
    start_flag=false;
  }
 }

 if((start_flag==true)&&(station2_status=="ON"))//if start button is pressed and station2 button is pressed
 {
  stepper_motor2(); // stepper2 motor function call
  if(counter2>cycle_count2)  // if counter2 is greater than entered count cycle then reset it.
  { 
    motor2_speed=0;
    start_angle2=0;
    stop_angle2=0;
    cycle_count2=0;
    counter2=0;
    //start_flag=false;
  }
 }

 

}

//////////////////////////////////////////////
void serial_data() //touch screen information being passed to the code
{
 while(Serial1.available())  //wait until serial data is available
    {   
     if(Serial1.available() > 0) // if available data is greater than zero
       {
        data=Serial1.readString(); //Read serial data on Rx1,Tx1
        Serial.println(data);      // Print serial data
        if(data.startsWith("START"))  
        {start_flag=true;}
        
       if(data.startsWith("PAUSE"))
        {start_flag=false;}

        if(data.startsWith("s1"))
        {
          s1=true;
          s2=false;

        }

        if(data.startsWith("s2"))
        {
          s1=false;
          s2=true;

        }
  
       if(data.startsWith("save"))
          {
        int start_angle_index = data.indexOf("start_angle");
        int stop_angle_index = data.indexOf("stop_angle");
        int cycle_count_index= data.indexOf("cycle_count");
        int slider_index= data.indexOf("slider");
        int station1_index=data.indexOf("station1=");
        int station2_index=data.indexOf("station2=");

        
       String String_start_angle = data.substring(start_angle_index+11, stop_angle_index);
       start_angle=String_start_angle.toInt();
       Serial.print("start_angle=");
       Serial.println(start_angle);
       //////////////
       String String_stop_angle = data.substring(stop_angle_index+10,cycle_count_index);
       stop_angle=String_stop_angle.toInt();
       Serial.print("stop_angle=");
       Serial.println(stop_angle);
       //////////////
       String String_cycle_count=data.substring(cycle_count_index+11);
       cycle_count=String_cycle_count.toInt();
       Serial.print("cycle_count=");
       Serial.println(cycle_count);
       /////////////
       String String_motor_speed=data.substring(slider_index+6);
       motor_speed=String_motor_speed.toInt();
       Serial.print("motor_speed=");
       Serial.println(motor_speed);
        /////////////
       String string_station1=data.substring(station1_index+9,station2_index);
       station1_status=string_station1;
       Serial.print("station1_status=");
       Serial.println(station1_status);
       //////////////
       String string_station2=data.substring(station2_index+9);//,station3_index);
       station2_status=string_station2;
       Serial.print("station2_status=");
       Serial.println(station2_status);
       //////////////
        
         if(station1_status=="ON")
          {
            motor1_speed=motor_speed;
            start_angle1=start_angle;
            stop_angle1=stop_angle;
            cycle_count1=cycle_count;
          }
          else
            {
            motor1_speed=0;
            start_angle1=0;
            stop_angle1=0;
            cycle_count1=0;
            }
            
           if(station2_status=="ON")
            {
            motor2_speed=motor_speed;
            start_angle2=start_angle;
            stop_angle2=stop_angle;
            cycle_count2=cycle_count;
            }
          else
            {
            motor2_speed=0;
            start_angle2=0;
            stop_angle2=0;
            cycle_count2=0;
            }
         }
        //Serial.print("start_flag=");
        //Serial.print(start_flag);
      }
     }
   }

 
//////////////////////////////////////////////////////////////////
void stepper_motor1()
{
 //while(counter1<=cycle_count1){
 
  serial_data();
  if(start_flag==false)
//  {
//    break;
//  }
  if (motor1_speed < 100 ) 
   {motor1_speed = 0;}
   //stepperMotorSpeed1 = map(motor1_speed , 0, 340, 341, 515, 516, 1023); // map the values of motor speed  0 to 4000 and 1023 to 0
   /*
   for (int i=0 ; i<start_angle1 ; i++)
    {
      serial_data();
      step1clockwise();
      Serial.println("clockwise 1");
    }
    for (int i = 0 ; i <stop_angle1 ; i++)
    {
      serial_data();
      step1anticlockwise();
      Serial.println("Anticlockwise 1");
    }
    */
    for (int i=0; i<cycle_count1; i++){ //for loop to go through cycle count

      digitalWrite(dirPin1, HIGH);
      for (int j=0; j<(110); j++){ //for loop to go through the angles clockwise
        digitalWrite(stepPin1, HIGH);
        delayMicroseconds(3500);
        digitalWrite(stepPin1, LOW);
        delayMicroseconds(3500);
      }
      digitalWrite(dirPin1, LOW);
      for (int k=0; k<(110); k++){ //for loop to go through the angles counter clockwise
        digitalWrite(stepPin1, HIGH);
        delayMicroseconds(3500);
        digitalWrite(stepPin1, LOW);
        delayMicroseconds(3500); 
      }
  counter1=counter1+1;

    }
        
  progress();
  //counter1=counter1+1;
  Serial.print("counter1="); 
  Serial.println(counter1); 
// }
}

//////////////////////////////////////////////////////////////////
void stepper_motor2()
{
 while(counter2<=cycle_count2)
 {
  serial_data();
  if(start_flag==false)
  {break;}
  if (motor2_speed < 100 ) 
   {motor2_speed = 0;}
   stepperMotorSpeed2 = map(motor2_speed , 0, 1023, 4000, 0);
   for (int i=0 ; i<start_angle2 ; i++)
    {
      serial_data();
      //step2clockwise();
      Serial.println("clockwise2");
    }
    for (int i = 0 ; i <stop_angle2 ; i++)
    {
      serial_data();
      //step2anticlockwise();
      Serial.println("Anticlockwise2");
    }
  progress();
  counter2=counter2+1;
  Serial.print("counter2="); 
  Serial.println(counter2); 
 }
}

/////////////////////////////////////////////////////////////////
void progress()
{
if(s1==true)
    {
      Serial1.print("t3.txt=");
      Serial1.print("\""); 
      Serial1.print(counter1); 
      Serial1.print("\"");      
      Serial1.write(0xff);
      Serial1.write(0xff);
      Serial1.write(0xff);
    }

   else if(s2==true)
    {
      Serial1.print("t3.txt=");
      Serial1.print("\""); 
      Serial1.print(counter2); 
      Serial1.print("\"");      
      Serial1.write(0xff);
      Serial1.write(0xff);
      Serial1.write(0xff);
    }

    
//    else
//    {
//      Serial1.print("t3.txt=");
//      Serial1.print("\""); 
//      Serial1.print(counter1); 
//      Serial1.print("\"");      
//      Serial1.write(0xff);
//      Serial1.write(0xff);
//      Serial1.write(0xff); 
//    }
}
////////////////////////////////
/*
void step1clockwise()
{ digitalWrite(dirPin1, LOW);
  for (int i = 0; i <stepsPerRevolution; i++)     // These four lines result in 1 step:
  {
    digitalWrite(stepPin1, HIGH);
    delayMicroseconds(stepperMotorSpeed1);
    digitalWrite(stepPin1, LOW);
    delayMicroseconds(stepperMotorSpeed1);
    Serial.print("ClockWise-1");
  }
}
void step1anticlockwise()
{ digitalWrite(dirPin1, HIGH);
  for (int i = 0; i < stepsPerRevolution; i++)     // These four lines result in 1 step:
  {
    digitalWrite(stepPin1, HIGH);
    delayMicroseconds(stepperMotorSpeed1);
    digitalWrite(stepPin1, LOW);
    delayMicroseconds(stepperMotorSpeed1);
    Serial.print("Counterclk-1");
  }
}

////////////////////////////////
void step2clockwise()
{ digitalWrite(dirPin2, LOW);
  for (int i = 0; i <stepsPerRevolution; i++)     // These four lines result in 1 step:
  {
    digitalWrite(stepPin2, HIGH);
    delayMicroseconds(stepperMotorSpeed2);
    digitalWrite(stepPin2, LOW);
    delayMicroseconds(stepperMotorSpeed2);
    
  }
}
void step2anticlockwise()
{ digitalWrite(dirPin2, HIGH);
  for (int i = 0; i < stepsPerRevolution; i++)     // These four lines result in 1 step:
  {
    digitalWrite(stepPin2, HIGH);
    delayMicroseconds(stepperMotorSpeed2);
    digitalWrite(stepPin2, LOW);
    delayMicroseconds(stepperMotorSpeed2);
  }
}

////////////////////////////////
*/
